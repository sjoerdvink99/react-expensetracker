[{"/Users/sjoerdvink/Desktop/expensetracker/src/index.js":"1","/Users/sjoerdvink/Desktop/expensetracker/src/App.js":"2","/Users/sjoerdvink/Desktop/expensetracker/src/components/Details/Details.jsx":"3","/Users/sjoerdvink/Desktop/expensetracker/src/components/Details/styles.js":"4","/Users/sjoerdvink/Desktop/expensetracker/src/styles.js":"5","/Users/sjoerdvink/Desktop/expensetracker/src/components/Main/Main.jsx":"6","/Users/sjoerdvink/Desktop/expensetracker/src/components/Main/styles.js":"7","/Users/sjoerdvink/Desktop/expensetracker/src/components/Main/Form/Form.jsx":"8","/Users/sjoerdvink/Desktop/expensetracker/src/components/Main/Form/styles.js":"9","/Users/sjoerdvink/Desktop/expensetracker/src/components/Main/List/List.jsx":"10","/Users/sjoerdvink/Desktop/expensetracker/src/components/Main/List/styles.js":"11","/Users/sjoerdvink/Desktop/expensetracker/src/context/context.js":"12","/Users/sjoerdvink/Desktop/expensetracker/src/context/contextReducer.js":"13","/Users/sjoerdvink/Desktop/expensetracker/src/constants/categories.js":"14","/Users/sjoerdvink/Desktop/expensetracker/src/utils/formateDate.js":"15","/Users/sjoerdvink/Desktop/expensetracker/src/useTransactions.js":"16"},{"size":434,"mtime":1610463448581,"results":"17","hashOfConfig":"18"},{"size":1262,"mtime":1610466730797,"results":"19","hashOfConfig":"18"},{"size":708,"mtime":1610458418578,"results":"20","hashOfConfig":"18"},{"size":245,"mtime":1610374598575,"results":"21","hashOfConfig":"18"},{"size":551,"mtime":1610466883843,"results":"22","hashOfConfig":"18"},{"size":1268,"mtime":1610466425432,"results":"23","hashOfConfig":"18"},{"size":489,"mtime":1610375695272,"results":"24","hashOfConfig":"18"},{"size":4766,"mtime":1610465379820,"results":"25","hashOfConfig":"18"},{"size":234,"mtime":1610376612537,"results":"26","hashOfConfig":"18"},{"size":1578,"mtime":1610455504726,"results":"27","hashOfConfig":"18"},{"size":398,"mtime":1610377581579,"results":"28","hashOfConfig":"18"},{"size":961,"mtime":1610466249749,"results":"29","hashOfConfig":"18"},{"size":597,"mtime":1610465569894,"results":"30","hashOfConfig":"18"},{"size":1659,"mtime":1610455480693,"results":"31","hashOfConfig":"18"},{"size":365,"mtime":1610456405187,"results":"32","hashOfConfig":"18"},{"size":1119,"mtime":1610458421444,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1c6bpnm",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/Users/sjoerdvink/Desktop/expensetracker/src/index.js",[],"/Users/sjoerdvink/Desktop/expensetracker/src/App.js",[],["69","70"],"/Users/sjoerdvink/Desktop/expensetracker/src/components/Details/Details.jsx",[],"/Users/sjoerdvink/Desktop/expensetracker/src/components/Details/styles.js",[],"/Users/sjoerdvink/Desktop/expensetracker/src/styles.js",[],"/Users/sjoerdvink/Desktop/expensetracker/src/components/Main/Main.jsx",[],"/Users/sjoerdvink/Desktop/expensetracker/src/components/Main/styles.js",[],"/Users/sjoerdvink/Desktop/expensetracker/src/components/Main/Form/Form.jsx",["71","72"],"import React, { useState, useEffect, useContext } from 'react';\nimport { TextField, Typography, Grid, Button, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\nimport useStyles from './styles';\nimport { ExpenseTrackerContext } from '../../../context/context';\nimport { v4 as uuidv4 } from 'uuid';\nimport { incomeCategories, expenseCategories } from '../../../constants/categories';\nimport formatDate from '../../../utils/formateDate';\nimport { useSpeechContext } from '@speechly/react-client';\n\nconst initialState = {\n    'amount': '',\n    'category': '',\n    'type': 'Income',\n    'date': formatDate(new Date()),\n}\n\nconst Form = () => {\n    const classes = useStyles();\n    const [formData, setFormData] = useState(initialState);\n    const { addTransaction } = useContext(ExpenseTrackerContext);\n    const { segment } = useSpeechContext();\n\n    const createTransaction = () => {\n        if(Number.isNaN(Number(formData.amount)) || !formData.date.includes('-')) return;\n        const transaction = { ...formData, amount: Number(formData.amount), id: uuidv4() };\n        addTransaction(transaction);\n        setFormData(initialState); \n    }\n\n    useEffect(() => {\n        if(segment) {\n            if(segment.intent.intent === 'add_expense') {\n                setFormData({...formData, type: 'Expense'})\n            } else if(segment.intent.intent === 'add_income') {\n                setFormData({...formData, type: 'Income'})\n            } else if(segment.isFinal && segment.intent.intent === 'create_transaction') {\n                return createTransaction();\n            } else if(segment.isFinal && segment.intent.intent === 'cancel_transaction') {\n                return setFormData(initialState);\n            }\n            \n            segment.entities.forEach((e) => {\n                const category = `${e.value.charAt(0)}${e.value.slide(1).toLowerCase()}`;\n                switch(e.type) {\n                    case 'amount':\n                        setFormData({ ...formData, amount: e.value });\n                        break;\n                    case 'category':\n                        if(incomeCategories.map((iC) => iC.type).includes(category)) {\n                            setFormData({ ...formData, type: 'Income', category });\n                        } else if(expenseCategories.map((iC) => iC.type).includes(category)) {\n                            setFormData({ ...formData, type: 'Expense', category });\n                        }\n                        break;\n                    case 'date':\n                        setFormData({ ...formData, date: e.value });\n                        break;\n                }\n            });\n\n            if(segment.isFinal && formData.amount && formData.category && formData.type && formData.date) {\n                createTransaction();\n            }\n\n        }\n    }, [segment]);\n\n    const selectedCategories = formData.type === \"Income\" ? incomeCategories : expenseCategories;\n\n    return (\n        <Grid container spacing={2}>\n            <Grid item xs={12}>\n                <Typography align='center' variant='subtitle2' gutterBottom>\n                    {segment && segment.words.map((w) => w.value).join(' ')}\n                </Typography>\n            </Grid>\n            <Grid item xs={6}>\n                <FormControl fullWidth>\n                    <InputLabel>Type</InputLabel>\n                    <Select value={formData.type} onChange={(e) => setFormData({ ...formData, type: e.target.value })}>\n                        <MenuItem value='Income'>Income</MenuItem>\n                        <MenuItem value='Expense'>Expense</MenuItem>\n                    </Select>\n                </FormControl>\n            </Grid>\n            <Grid item xs={6}>\n                <FormControl fullWidth>\n                    <InputLabel>Category</InputLabel>\n                    <Select value={formData.category} onChange={(e) => setFormData({ ...formData, category: e.target.value })}>\n                        {selectedCategories.map((c) => <MenuItem key={c.type} value={c.type}>{c.type}</MenuItem>)}\n                    </Select>\n                </FormControl>\n            </Grid>\n            <Grid item xs={6}>\n                <TextField type='number' label='Amount' fullWidth value={formData.amount} onChange={(e) => setFormData({ ...formData, amount: e.target.value })} />\n            </Grid>\n            <Grid item xs={6}>\n                <TextField type='date' label='Date' fullWidth value={formData.date} onChange={(e) => setFormData({ ...formData, date: formatDate(e.target.value )})} />\n            </Grid>\n            <Button className={classes.button} variant='outlined' color='primary' fullWidth onClick={createTransaction}>Create</Button>\n        </Grid>\n    )\n}\n\nexport default Form;","/Users/sjoerdvink/Desktop/expensetracker/src/components/Main/Form/styles.js",[],"/Users/sjoerdvink/Desktop/expensetracker/src/components/Main/List/List.jsx",[],"/Users/sjoerdvink/Desktop/expensetracker/src/components/Main/List/styles.js",[],"/Users/sjoerdvink/Desktop/expensetracker/src/context/context.js",[],"/Users/sjoerdvink/Desktop/expensetracker/src/context/contextReducer.js",[],"/Users/sjoerdvink/Desktop/expensetracker/src/constants/categories.js",[],"/Users/sjoerdvink/Desktop/expensetracker/src/utils/formateDate.js",["73"],"const formatDate = (date) => {\n    const d = new Date(date);\n    let month = `${d.getMonth() + 1}`;\n    const day = `${d.getDate()}`;\n    const year = `${d.getFullYear()}`;\n\n    if (month.length < 2) {\n        month = `0${month}`;\n    }\n\n    if (day.length < 2) {\n        day = `0${day}`;\n    }\n\n    return [year, month, day].join('-')\n}\n\nexport default formatDate;","/Users/sjoerdvink/Desktop/expensetracker/src/useTransactions.js",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":44,"column":17,"nodeType":"80","messageId":"81","endLine":58,"endColumn":18},{"ruleId":"82","severity":1,"message":"83","line":66,"column":8,"nodeType":"84","endLine":66,"endColumn":17,"suggestions":"85"},{"ruleId":"86","severity":1,"message":"87","line":12,"column":9,"nodeType":"88","messageId":"89","endLine":12,"endColumn":12},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'createTransaction' and 'formData'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.","ArrayExpression",["92"],"no-const-assign","'day' is constant.","Identifier","const","no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},"Update the dependencies array to be: [createTransaction, formData, segment]",{"range":"95","text":"96"},[2846,2855],"[createTransaction, formData, segment]"]